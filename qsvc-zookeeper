#!/usr/bin/env perl
use strict;

#Auto-flush stdout
BEGIN { $| = 1; }

my $INSTANCE_VAR_NAME = 'ZOOKEEPER_INSTANCE_NAME';

sub usage {
  print <<EOF;
  $0 cluster connectstr
  $0 cluster exhibitorurl
  $0 cluster wait
EOF
  exit(1);
}

sub main {
  &usage unless @ARGV;
  my @args = @ARGV;
  my %cmds = (
    cluster => \&cluster
  );
  &dispatch(\%cmds, \@args);
}

sub cluster {
  my @args = @_;
  my %cmds = (
    connectstr => \&cluster_connect_str,
    exhibitorurl => \&cluster_exhibitor_url,
    wait => \&cluster_wait
  );
  &dispatch(\%cmds, \@args);
}

sub cluster_connect_str {
  print &get_connect_str();
}

sub cluster_exhibitor_url {
  print &get_exhibitor_url();
}

sub cluster_wait {
  my @servers = &get_servers();
  foreach my $svr (@servers) {
    my $zk_poll_cmd = "echo ruok | nc -w 2 $svr->{'host'} $svr->{'port'} | grep imok";
    print "Polling ZooKeeper Service ($zk_poll_cmd) ...";
    until (system($zk_poll_cmd) == 0) {
      print('.');
      sleep(2);
    };
    print "OK\n";
  }
}

sub get_connect_str {
  my @servers = &get_servers();
  my @svr_strs = map { "$_->{'host'}:$_->{'port'}" } @servers;
  return join(',', @svr_strs);
}

sub get_servers {
  die "Need to set $INSTANCE_VAR_NAME env var" unless exists $ENV{$INSTANCE_VAR_NAME};
  my $id = $ENV{$INSTANCE_VAR_NAME};
  my $zk_svc_var_prefix = uc("$id-zookeeper-");
  $zk_svc_var_prefix =~ tr/-/_/;
  my @servers = ();
  my $i = 1;
  do {
    my $host_var = "${zk_svc_var_prefix}${i}_SERVICE_HOST";
    die "Must set $host_var env var" unless exists $ENV{$host_var};
    my $client_port_var = "${zk_svc_var_prefix}${i}_SERVICE_PORT_CLIENT";
    die "Must set $client_port_var env var" unless exists $ENV{$client_port_var};
    push @servers, {host => $ENV{$host_var}, port => $ENV{$client_port_var}};
    $i += 1;
  } while (exists $ENV{"${zk_svc_var_prefix}${i}_SERVICE_HOST"});
  return @servers;
}

sub get_exhibitor_url {
  my ($host, $port) = &get_svc_vars('exhibitor', '_SERVICE_HOST', '_SERVICE_PORT_WEB');
  return "http://$host:$port";
}

sub dispatch {
  my ($cmds, $args) = @_;
  my $cmd = shift(@$args);
  &usage() unless exists $cmds->{$cmd};
  $cmds->{$cmd}->(@$args);
}

sub poll_url {
  my ($name, $url) = @_;
  print "Polling $name url ($url) ...";
  until (system("curl --output /dev/null --silent --head --fail $url") == 0) {
    printf('.');
    sleep 2;
  }
  print "OK\n";
}

sub get_svc_vars {
  my $svc_name = shift(@_);
  die "Need to set $INSTANCE_VAR_NAME env var" unless exists $ENV{$INSTANCE_VAR_NAME};
  my $id = $ENV{$INSTANCE_VAR_NAME};
  my $svc_var_prefix = uc("$id-$svc_name");
  $svc_var_prefix =~ tr/-/_/;
  my @vars = ();
  foreach my $suffix (@_) {
    my $svc_var = "${svc_var_prefix}${suffix}";
    die "Must set $svc_var env var" unless exists $ENV{$svc_var};
    push @vars, $ENV{$svc_var};
  }
  return @vars;
}

&main();

1;
